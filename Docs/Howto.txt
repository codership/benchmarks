This is a little HOWTO.

Reminder: Check your ansible version. This Repo is build and tested against ansible 1.4.3

First get the files:
> https://github.com/codership/benchmarks.git
> cd benchmarks

From now this is your working directory.
Right now you got no help in building your ini file.
That file is responsible for identifying/grouping your nodes.

It is going to look similar to  this:

#v+
[galera]
my.fqdn.it  ansible_ssh_user=root leader=me
my2.fqdn.it  ansible_ssh_user=root 
54.204.173.187  ansible_ssh_user=root

[sysbench]
dns.name ansible_ssh_user=root
#v-

First we got to groups.
The [galera] group defines our galera nodes.
While [sysbench] defines the test nodes.
(for now it is recommended to have only one test node.)

The ansible_ssh_user option just tells which user to use
for logging into the remote machine. (We suggest to deploy your
public key on all nodes.)
One of the galera nodes got to be marked with leader=me. 
It just tells which node will run the first/initial galera instance.

We assume our ini file is named galera.ini
Test your ini file:
> ansible -i galera.ini all -m ping

Now you can run your first installation (as of 20131226 we support 
the RedHat OS family and coderhip installation).

So following was tested with the ami-eb6b0182 on aws. 
Just have a look into the Docs to find other tested images.
It will install you a patched MySQL 5.6 (from codership) with galera 3.x.

> ansible-playbook -i galera.ini Playbooks/multi_install.yaml --extra-vars="gcomm=10.71.146.133,10.140.29.140,10.137.33.80"
While Playbooks/multi_install.yaml is just a File holding/including a bunch of tasks.
You got to provide the Value for gcomm. 
After a short time you got a running galera cluster.
Go and connect to have a look.

So now run your first Test

> ansible-playbook -i galera.ini Playbook/multi_test.yaml --extra-vars="gcomm=10.71.146.133,10.140.29.140,10.137.33.80"

Great you are done.
The result file is stored in your /tmp. Fixed later :)



